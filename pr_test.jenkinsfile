Map modules = [:]
pipeline {
  agent none
  environment {
    email_add1 = 'ivan.pilyushenko@weigandt-consulting.com'
    email_add2 = 'konstantin.orlov@weigandt-consulting.com'
  }
  /* DEV DEPLOYMENT STAGE */
  stages {
    stage('DEV Deploy') {
      agent {
        node {
          label "jenkins01"
        }
      }
      when {
        beforeAgent true
        allOf {
          anyOf{
            expression { params.PR_ACTION ==~ "opened" }
            expression { params.PR_ACTION ==~ "synchronize" }
          }         
          expression { params.BASE_BRANCH ==~ "develop" }
        }
      }
      environment {
        DEPLOY_ENV = 'DEV'
        HOSTNAME = sh(script: "hostname", returnStdout: true).trim()
        IP_ADDR = sh(script: "hostname -I | awk '{print \$1}'", returnStdout: true)
      }
      steps {
        /* Sending deployment initialization email */
        script {
          modules.emailExtSend = load "./jenkins/emailExtSend.groovy"
          modules.emailExtSend.emailExtSend("Start", 
                                            "${params.PR_NUM}",
                                            "${env.DEPLOY_ENV}", 
                                            "${params.PR_TITLE}", 
                                            "${params.HEAD_BRANCH}",
                                            "${params.BASE_BRANCH}",
                                            "${params.PR_USER}",
                                            "${env.BUILD_NUMBER}",
                                            "${env.HOSTNAME}",
                                            "${env.IP_ADDR}",
                                            ["${env.email_add1}", "${env.email_add2}"]
                                          )

          /*showGifDiff("${params.HEAD_SHA}", "${params.BASE_SHA}") */
          modules.showGitDiff = load "showGitDiff.groovy"
          modules.showGitDiff.showGitDiff("${params.HEAD_SHA}", "${params.BASE_SHA}")
        }
        /* main steps */
        echo "========================================"
        echo "deployment to ${env.DEPLOY_ENV} is happening"
        echo "PR_ACTION value is ${params.PR_ACTION}"
        echo "BASE_BRANCH value is ${params.BASE_BRANCH}"
        echo "HEAD_BRANCH value is ${params.HEAD_BRANCH}"
        /*withEnv(["DEPLOY_ENV=DEV"]) {
          echo "DEPLOY_ENV = ${env.DEPLOY_ENV}"
        }*/
        echo "Executing move_rpd.sh script"
        sh 'chmod +x ./move_rpd.sh'
        sh './move_rpd.sh'
      }
      post {
        success {
          script {
            modules.emailExtSend = load "./jenkins/emailExtSend.groovy"
            modules.emailExtSend.emailExtSend("Success", 
                                              "${params.PR_NUM}",
                                              "${env.DEPLOY_ENV}", 
                                              "${params.PR_TITLE}", 
                                              "${params.HEAD_BRANCH}",
                                              "${params.BASE_BRANCH}",
                                              "${params.PR_USER}",
                                              "${env.BUILD_NUMBER}",
                                              "${env.HOSTNAME}",
                                              "${env.IP_ADDR}",
                                              ["${env.email_add1}", "${env.email_add2}"]
                                            )
          }
        }
        failure {
          script {
            modules.emailExtSend = load "./jenkins/emailExtSend.groovy"
            modules.emailExtSend.emailExtSend("Failed", 
                                              "${params.PR_NUM}",
                                              "${env.DEPLOY_ENV}", 
                                              "${params.PR_TITLE}", 
                                              "${params.HEAD_BRANCH}",
                                              "${params.BASE_BRANCH}",
                                              "${params.PR_USER}",
                                              "${env.BUILD_NUMBER}",
                                              "${env.HOSTNAME}",
                                              "${env.IP_ADDR}",
                                              ["${env.email_add1}", "${env.email_add2}"]
                                            )
          }
        }
      }
    }
    /* TEST DEPLOYMENT STAGE */
    stage('TEST deploy') {
      agent {
        node {
          label 'spbdocker'
        }
      }
      when {
        beforeAgent true
        allOf {
          expression { params.BASE_BRANCH ==~ "develop" }
          expression { params.PR_ACTION ==~ "submitted" }
          expression { params.REVIEW_STATE ==~ "approved" }
        }
      }
      environment {
        DEPLOY_ENV = 'TEST'
        HOSTNAME = sh(script: "hostname", returnStdout: true).trim()
        IP_ADDR = sh(script: "hostname -I | awk '{print \$1}'", returnStdout: true)
      }
      steps {
        /* Sending deployment initialization email */
        script {
          modules.emailExtSend = load "./jenkins/emailExtSend.groovy"
          modules.emailExtSend.emailExtSend("Start", 
                                            "${params.PR_NUM}",
                                            "${env.DEPLOY_ENV}", 
                                            "${params.PR_TITLE}", 
                                            "${params.HEAD_BRANCH}",
                                            "${params.BASE_BRANCH}",
                                            "${params.PR_USER}",
                                            "${env.BUILD_NUMBER}",
                                            "${env.HOSTNAME}",
                                            "${env.IP_ADDR}",
                                            ["${env.email_add1}", "${env.email_add2}"]
                                          )

          /*showGifDiff("${params.HEAD_SHA}", "${params.BASE_SHA}") */
          modules.showGitDiff = load "showGitDiff.groovy"
          modules.showGitDiff.showGitDiff("${params.HEAD_SHA}", "${params.BASE_SHA}")
          /*showGifDiff("${params.HEAD_SHA}", "${params.BASE_SHA}") */
          modules.showGitDiff = load "showGitDiff.groovy"
          modules.showGitDiff.showGitDiff("${params.HEAD_SHA}", "${params.BASE_SHA}")
        }
        echo "========================================"
        echo "deployment to ${env.DEPLOY_ENV} is happening"
        echo "PR_ACTION value is ${params.PR_ACTION}"
        echo "BASE_BRANCH value is ${params.BASE_BRANCH}"
        echo "HEAD_BRANCH value is ${params.EAD_BRANCH}"
        echo "REVIEW_STATE value is ${params.REVIEW_STATE}"
        /*withEnv(["DEPLOY_ENV=DEV"]) {
          echo "DEPLOY_ENV = ${env.DEPLOY_ENV}"
        }*/
        echo "Executing move_rpd.sh script"
        sh 'chmod +x ./move_rpd.sh'
        sh './move_rpd.sh'
      }
      post {
        success {
          script {
            modules.emailExtSend = load "./jenkins/emailExtSend.groovy"
            modules.emailExtSend.emailExtSend("Success", 
                                              "${params.PR_NUM}",
                                              "${env.DEPLOY_ENV}", 
                                              "${params.PR_TITLE}", 
                                              "${params.HEAD_BRANCH}",
                                              "${params.BASE_BRANCH}",
                                              "${params.PR_USER}",
                                              "${env.BUILD_NUMBER}",
                                              "${env.HOSTNAME}",
                                              "${env.IP_ADDR}",
                                              ["${env.email_add1}", "${env.email_add2}"]
                                            )
          }
        }
        failure {
          script {
            modules.emailExtSend = load "./jenkins/emailExtSend.groovy"
            modules.emailExtSend.emailExtSend("Failed", 
                                              "${params.PR_NUM}",
                                              "${env.DEPLOY_ENV}", 
                                              "${params.PR_TITLE}", 
                                              "${params.HEAD_BRANCH}",
                                              "${params.BASE_BRANCH}",
                                              "${params.PR_USER}",
                                              "${env.BUILD_NUMBER}",
                                              "${env.HOSTNAME}",
                                              "${env.IP_ADDR}",
                                              ["${env.email_add1}", "${env.email_add2}"]
                                            )
          }
        }
      }
    }
    /* PROD DEPLOYMENT STAGE */
    stage('PROD deploy') {
      agent {
        node {
          label 'spbdocker'
        }
      }
      when {
        beforeAgent true
        allOf {
          expression { params.PR_ACTION ==~ "submitted" }
          expression { params.BASE_BRANCH ==~ "main" }
          expression { params.HEAD_BRANCH ==~ "develop" }
          expression { params.REVIEW_STATE ==~ "approved" }
        }
      }
      environment {
        DEPLOY_ENV = 'PROD'
        HOSTNAME = sh(script: "hostname", returnStdout: true).trim()
        IP_ADDR = sh(script: "hostname -I | awk '{print \$1}'", returnStdout: true)
      }
      steps {
        script { 
          /*showGifDiff("${params.HEAD_SHA}", "${params.BASE_SHA}") */
          modules.emailExtSend = load "./jenkins/emailExtSend.groovy"
          modules.emailExtSend.emailExtSend("Start", 
                                            "${params.PR_NUM}",
                                            "${env.DEPLOY_ENV}", 
                                            "${params.PR_TITLE}", 
                                            "${params.HEAD_BRANCH}",
                                            "${params.BASE_BRANCH}",
                                            "${params.PR_USER}",
                                            "${env.BUILD_NUMBER}",
                                            "${env.HOSTNAME}",
                                            "${env.IP_ADDR}",
                                            ["${env.email_add1}", "${env.email_add2}"]
                                          )

          /*showGifDiff("${params.HEAD_SHA}", "${params.BASE_SHA}") */
          modules.showGitDiff = load "showGitDiff.groovy"
          modules.showGitDiff.showGitDiff("${params.HEAD_SHA}", "${params.BASE_SHA}")
          modules.showGitDiff = load "showGitDiff.groovy"
          modules.showGitDiff.showGitDiff("${params.HEAD_SHA}", "${params.BASE_SHA}")
        }
        echo "========================================"
        echo "deployment to ${env.DEPLOY_ENV} is happening"
        echo "PR_ACTION value is ${params.PR_ACTION}"
        echo "BASE_BRANCH value is ${params.BASE_BRANCH}"
        echo "HEAD_BRANCH value is ${params.HEAD_BRANCH}"
        echo "REVIEW_STATE value is ${params.REVIEW_STATE}"
        /*withEnv(["DEPLOY_ENV=DEV"]) {
          echo "DEPLOY_ENV = ${env.DEPLOY_ENV}"
        }*/
        echo "Executing move_rpd.sh script"
        sh 'chmod +x ./move_rpd.sh'
        sh './move_rpd.sh'
      }
      post {
        success {
          script {
            modules.emailExtSend = load "./jenkins/emailExtSend.groovy"
            modules.emailExtSend.emailExtSend("Success", 
                                              "${params.PR_NUM}",
                                              "${env.DEPLOY_ENV}", 
                                              "${params.PR_TITLE}", 
                                              "${params.HEAD_BRANCH}",
                                              "${params.BASE_BRANCH}",
                                              "${params.PR_USER}",
                                              "${env.BUILD_NUMBER}",
                                              "${env.HOSTNAME}",
                                              "${env.IP_ADDR}",
                                              ["${env.email_add1}", "${env.email_add2}"]
                                            )
          }
        }
        failure {
          script {
            modules.emailExtSend = load "./jenkins/emailExtSend.groovy"
            modules.emailExtSend.emailExtSend("Failed", 
                                              "${params.PR_NUM}",
                                              "${env.DEPLOY_ENV}", 
                                              "${params.PR_TITLE}", 
                                              "${params.HEAD_BRANCH}",
                                              "${params.BASE_BRANCH}",
                                              "${params.PR_USER}",
                                              "${env.BUILD_NUMBER}",
                                              "${env.HOSTNAME}",
                                              "${env.IP_ADDR}",
                                              ["${env.email_add1}", "${env.email_add2}"]
                                            )
          }
        }
      }
    }
  }
}
